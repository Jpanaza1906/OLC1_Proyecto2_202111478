int x = 100;
boolean flag = true;
int x1 = (int) 12.9;
double xd = (double) "13.4";
xd = (double) 97;
int edad = 0;
void resta(){
    print(x1);
    int nc = (int)xd;
    print((char)nc);
    print((int)'a');
    int y = 26;
    int edad2 = 18;
    String mensaje = edad2 >= 18 ? "Eres mayor de edad" : "Eres menor de edad";
    print(mensaje);
    print(x - 100 + 200 + y);
    print(97.0 == 97);
    print(1 != flag);
    print(false || flag);
    print(true && flag);
    print(!false);
}
main resta();

int x = 100;
boolean flag = true;
int x1 = (int) 12.9;
double xd = (double) "13.4";
xd = (double) 97;
int edad = 0;
void resta(){
    while(edad == 0){
        print("hola");
        x1++;
        if(x1 == 16){
            edad = 2;
        }
    }
    do{
        print("adios");
        x1++;
        if(x1 == 20){
            edad = 3;
        }
    }while(edad == 2);
}
main resta();


int sumar(int a, int b){
return a+b;
}

void funcion_main(){
print( false ? 5 : 2);//2
print( (false || true && 5<9) ? 5 : 2); //5
print( true ? "respuesta correcta" : false); //respuesta correcta
print( false ? "no es esto" : (true ? ("la respuesta es "+(1+9)*10) : 9)); //la respuesta es 100
print( (sumar(7,3) > 10) ? 5 : "7+3 no es mayor a 10");//7+3 no es mayor a 10
}

main funcion_main();

/* Resultado
2
5
respuesta correcta
la respuesta es 100
7+3 no es mayor a 10
*/




//2do Archivo de Prueba

double r_toRadians;
double r_sine;
void toRadians(double angle) {
    r_toRadians = angle * 3.141592653589793 / 180;
}

void sine(double x) {
    double sin = 0.0;
    int fact;
    int i = 1;
    while (i <= 10) {
        fact = 1;
        int j = 1;
        while (j <= 2 * i - 1) {
            fact = fact * j;
            j = j + 1;
        }
        sin = sin + ((x^(2*i-1)) / fact);
        i = i + 1;
    }
    r_sine = sin;
}

void drawTree(double x1, double y1, double angle, int depth) {
    print(x1 + "," + y1 + "," + angle + "," + depth);
    if (depth != 0) {
        toRadians(angle);
        sine(1.1);
        print(r_toRadians + "," + r_sine);
        double x2 = x1 + (r_sine * depth * 10.0);
        print(x2);
        toRadians(angle);
        print(r_toRadians + "," + r_sine);
    //    sine(r_toRadians);
    //    print(r_toRadians + "," + r_sine);
    //    double y2 = y1 + (r_sine * depth * 10.0);
    //    Print(x1 + " " + y1 + " " + x2 + " " + y2 + "");
    //    drawTree(x2, y2, angle - 20, depth - 1);
    //    drawTree(x2, y2, angle + 20, depth - 1);
    }

}

void Principal() {
    Print("===============¿SI SALE?=================");
    drawTree(250.0, 500.0, -90.0, 4);
    Print("================ FIN ====================");
}

main Principal();

/*
-------------------------SALIDAD ESPERADA----------------------
===============¿SI SALE?=================
250 500 250 407.9480439077082
250 407.9480439077082 239.31406202799965 307.8471746908033
239.31406202799965 307.8471746908033 224.18926216484266 212.19110133437974
224.18926216484266 212.19110133437974 211.6955916596029 144.01486829323312
224.18926216484266 212.19110133437974 220.62728284084255 178.82414492874477
239.31406202799965 307.8471746908033 239.31406202799965 261.8211966446574
239.31406202799965 261.8211966446574 235.75208270399955 228.45424023902243
239.31406202799965 261.8211966446574 242.87604135199976 246.32952396143438
250 407.9480439077082 260.6859379720004 361.47302585803914
260.6859379720004 361.47302585803914 260.6859379720004 315.44704781189324
260.6859379720004 315.44704781189324 257.12395864800027 282.08009140625825
260.6859379720004 315.44704781189324 264.2479172960005 299.9553751286702
260.6859379720004 361.47302585803914 275.81073783515734 341.71859712289154
275.81073783515734 341.71859712289154 279.37271715915745 326.2269244396685
275.81073783515734 341.71859712289154 288.3044083403971 336.24006238401114
================ FIN ====================
*/









//Este es el primer archivo de prueba
/*En este archivo se verifica el funcionamiento correcto del
ciclo while, asi como la sentencia if y else
*/

void metodo1(){
    //llamada del metodo
    figura1(10);
}
void figura1(int n) {
        // String cadenaFigura = "";
        // double i; 
        // i=-3*n/2;
        // //iniciando dibujo
        // while(i<=n){
        //     cadenaFigura = "";
        //     double j; 
        //     j=-3*n/2;
        //     while(j<=3*n){
        //         double absolutoi;
        //         absolutoi = i;
        //         double absolutoj;
        //         absolutoj = j;
        //         if(i < 0)
        //         {
        //             absolutoi = i * -1;
        //         }
        //         if(j < 0)
        //         {
        //             absolutoj = j * -1;
        //         }
        //         if((absolutoi + absolutoj < n)
        //                 || ((-n / 2 - i) * (-n / 2 - i) + (n / 2 - j) * (n / 2 - j) <= n * n / 2)
        //                 || ((-n / 2 - i) * (-n / 2 - i) + (-n / 2 - j) * (-n / 2 - j) <= n * n / 2)) {
        //             cadenaFigura = cadenaFigura + "* ";
        //         }
        //         else
        //         {
        //             cadenaFigura = cadenaFigura + ". ";
        //         }
        //         j=j+1;
        //     }
        //     print(cadenaFigura);
        //     i=i+1;
        // }
        // print("Si la figura es un corazón, te aseguro que tendrás un 100 :3");
    }

main metodo1();

/*
    este es un comentario multilinea
*/

/*
---------------------------SALIDA ESPERADA-----------------------
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . * * * . . . . . . . * * * . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . * * * * * * * . . . * * * * * * * . . . . . . . . . . . . . . . . . . . . . . 
. . . . . * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . 
. . . . . * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . 
. . . . * * * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . 
. . . . * * * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . 
. . . * * * * * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . 
. . . * * * * * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . 
. . . * * * * * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . 
. . . . * * * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . 
. . . . * * * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . 
. . . . . * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . 
. . . . . * * * * * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . 
. . . . . . . * * * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . * * * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . * * * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . * * * * * * * * * * * . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . * * * * * * * * * . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . * * * * * * * . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . * * * * * . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . * * * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
Si la figura es un corazon, te aseguro que tendrás un 100 :3

*/